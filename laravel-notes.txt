# Plantillas Blade.

    Layout: 
        @yield('title'), @yield('content')

    home:     
        @section('title', 'Hello! | Home')
        @section('content') - @endsection

# Controladores

    app/Http/Controllers

    > php artisan route:list (r:l)

        +--------+----------+-----------+-----------+-----------------------------------+------------+
        | Domain | Method   | URI       | Name      | Action                            | Middleware |
        +--------+----------+-----------+-----------+-----------------------------------+------------+
        |        | GET|HEAD | /         | home      | Illuminate\Routing\ViewController | web        |
        |        | GET|HEAD | about     | about     | Illuminate\Routing\ViewController | web        |
        |        | GET|HEAD | contact   | contact   | Illuminate\Routing\ViewController | web        |
        |        | GET|HEAD | portfolio | portfolio | Illuminate\Routing\ViewController | web        |
        +--------+----------+-----------+-----------+-----------------------------------+------------+


    > php artisan make:controller PortfolioController -i (Create a Controller with invoke method)

# Controladores Resources y API.

    # Resource Controller 

        > php artisan make:controller PortfolioController -r

            Crea un controller con los metodos:
                1 - Index.      (Usado para listar recursos)
                2 - Create.     (Formulario para crear recursos)
                3 - Store       (Guardar recursos en la base de datos)
                4 - Show        (Mostramos un recurso en especifico por ID)
                5 - Edit        (Formulario editar un recurso que ya existe)
                6 - Update      (Guardamos la actualizacion de un recurso)
                7 - Destroy     (Eliminamos un recurso)

        routes/web.php

            Route::resource('projects', 'PortfolioController');
            Route::resource('projects', 'PortfolioController')->only(['index', 'show']);
            Route::resource('projects', 'PortfolioController')->except(['index', 'show']);

        > php artisan r:l

            +--------+-----------+-------------------------+------------------+--------------------------------------------------+------------+
            | Domain | Method    | URI                     | Name             | Action                                           | Middleware |
            +--------+-----------+-------------------------+------------------+--------------------------------------------------+------------+
            |        | GET|HEAD  | projects                | projects.index   | App\Http\Controllers\PortfolioController@index   | web        |
            |        | POST      | projects                | projects.store   | App\Http\Controllers\PortfolioController@store   | web        |
            |        | GET|HEAD  | projects/create         | projects.create  | App\Http\Controllers\PortfolioController@create  | web        |
            |        | GET|HEAD  | projects/{project}      | projects.show    | App\Http\Controllers\PortfolioController@show    | web        |
            |        | PUT|PATCH | projects/{project}      | projects.update  | App\Http\Controllers\PortfolioController@update  | web        |
            |        | DELETE    | projects/{project}      | projects.destroy | App\Http\Controllers\PortfolioController@destroy | web        |
            |        | GET|HEAD  | projects/{project}/edit | projects.edit    | App\Http\Controllers\PortfolioController@edit    | web        |
            +--------+-----------+-------------------------+------------------+--------------------------------------------------+------------+

    # API Controller

        > php artisan make:controller PortfolioController --api

            Crea un controller con los metodos:
                1 - Index.      (Usado para listar recursos)
                2 - Store       (Guardar recursos en la base de datos)
                3 - Show        (Mostramos un recurso en especifico por ID)
                4 - Update      (Guardamos la actualizacion de un recurso)
                5 - Destroy     (Eliminamos un recurso)

        routes/web.php

            Route::ApiResource('projects', 'PortfolioController');
            Route::ApiResource('projects', 'PortfolioController')->only(['index', 'show']);
            Route::ApiResource('projects', 'PortfolioController')->except(['index', 'show']);

        > php artisan r:l

            +--------+-----------+--------------------+------------------+--------------------------------------------------+------------+
            | Domain | Method    | URI                | Name             | Action                                           | Middleware |
            +--------+-----------+--------------------+------------------+--------------------------------------------------+------------+
            |        | GET|HEAD  | projects           | projects.index   | App\Http\Controllers\PortfolioController@index   | web        |
            |        | POST      | projects           | projects.store   | App\Http\Controllers\PortfolioController@store   | web        |
            |        | GET|HEAD  | projects/{project} | projects.show    | App\Http\Controllers\PortfolioController@show    | web        |
            |        | PUT|PATCH | projects/{project} | projects.update  | App\Http\Controllers\PortfolioController@update  | web        |
            |        | DELETE    | projects/{project} | projects.destroy | App\Http\Controllers\PortfolioController@destroy | web        |
            +--------+-----------+--------------------+------------------+--------------------------------------------------+------------+

# Creando Helpers

    app/helpers.php

        Se crea file con funciones helpers.

    composer.json

        "autoload": {
            "psr-4": {
                "App\\": "app/"
            },
            "classmap": [
                "database/seeds",
                "database/factories"
            ],
            "files": ["app/helpers.php"] <-------
        },

        > composer dumpautoload

            Generating optimized autoload files
            > Illuminate\Foundation\ComposerScripts::postAutoloadDump
            > @php artisan package:discover --ansi
            Discovered Package: facade/ignition
            Discovered Package: fideloper/proxy
            Discovered Package: fruitcake/laravel-cors
            Discovered Package: laravel/tinker
            Discovered Package: nesbot/carbon
            Discovered Package: nunomaduro/collision
            Package manifest generated successfully.
            Generated optimized autoload files containing 4415 classes

    Blade template

        incluir archivos parciales

            @include('partials.nav')

# Envio de formularios.

    Creacion de token para evitar ataques XSS

        <form>
            @csrf
        </form>

# Validacion de formularios.

    # Controller

        request()->validate([
            'name'      => 'required',
            'email'     => 'required|email',
            'subject'   => 'required',
            'content'   => 'required|min:3',
        ]);

    # View

        @if( $errors->any() )
            @foreach( $errors->all() as $error )
                <ul>
                    <li>{{ $error }}</li>
                </ul>
            @endforeach
        @endif



